{% comment %} setup your cart such that when a user is created, a cart is created for him immediately so you dont have to create a cart.
go to the bootstrap link and get the template
fix database
install and setup allauth
git push
requirements.txt
gitignore
create messages in the product page  to tell you when a product has been successfully added to cart
make it such that after a check the cart is e,ptied and all the cart items are deleted and moved to a new model called order history
set up conditional rendering of the remove from cart
if a product is already in cart, then the button should be view in cart not add to cart
if a product is not in cart then remove from cart should not show
login required for cart
add the messages to the template {% endcomment %}

{% comment %} template tags
crispy forms not working {% endcomment %}
make the category a different models, connected to each product via primary keys
{% comment %} setup quantity in detailed views  {% endcomment %}
{% comment %} get amount saved {% endcomment %}
add  cart to the products list and index without using the form
add clear cart
{% comment %} remove from cart in cart {% endcomment %}
{% comment %} django countries {% endcomment %}
{% comment %} consider setting up a get_total in the cart model {% endcomment %}
improve your admin with client consideration
make your messages dismissable an auto dismiss after some seconds
{% comment %} fix jquery {% endcomment %}
{% comment %} fix Unchecked runtime.lastError: The message port closed before a response was received. {% endcomment %}
add a search functionality using the one in dermatology atlas index
paystack integration using stipe template
set up email with mailchimp and google
social account ligin with google
finalize with tests.. try to make multiple orders
customize all auth login, sign up, email confirmation, forgot password form

connect your checkout with your payment
delete unecessary pages
push
try to associate orders with individual accounts so each person can see his order history
change is_ordered to true after a successful order
add an option for delivered in the cart
change refund to dispute
add a contact us model

address
amount 
user
pay button 
